package main

import "github.com/chzyer/readline"

var completer = readline.NewPrefixCompleter(
	readline.PcItem("READONLY"),
	readline.PcItem("READWRITE"),
	readline.PcItem("AUTH"),
	readline.PcItem("ECHO"),
	readline.PcItem("HELLO"),
	readline.PcItem("PING"),
	readline.PcItem("QUIT"),
	readline.PcItem("SELECT"),
	readline.PcItem("COPY"),
	readline.PcItem("DEL"),
	readline.PcItem("DUMP"),
	readline.PcItem("EXISTS"),
	readline.PcItem("EXPIRE"),
	readline.PcItem("EXPIREAT"),
	readline.PcItem("EXPIRETIME"),
	readline.PcItem("KEYS"),
	readline.PcItem("MIGRATE"),
	readline.PcItem("MOVE"),
	readline.PcItem("OBJECT"),
	readline.PcItem("PERSIST"),
	readline.PcItem("PEXPIRE"),
	readline.PcItem("PEXPIREAT"),
	readline.PcItem("PTTL"),
	readline.PcItem("RANDOMKEY"),
	readline.PcItem("RENAME"),
	readline.PcItem("RENAMENX"),
	readline.PcItem("RESTORE"),
	readline.PcItem("SCAN"),
	readline.PcItem("SORT"),
	readline.PcItem("TOUCH"),
	readline.PcItem("TTL"),
	readline.PcItem("TYPE"),
	readline.PcItem("UNLINK"),
	readline.PcItem("WAIT"),
	readline.PcItem("GEOADD"),
	readline.PcItem("GEODIST"),
	readline.PcItem("GEOHASH"),
	readline.PcItem("GEOPOS"),
	readline.PcItem("GEORADIUS"),
	readline.PcItem("GEORADIUSBYMEMBER"),
	readline.PcItem("GEOSEARCH"),
	readline.PcItem("GEOSEARCHSTORE"),
	readline.PcItem("HDEL"),
	readline.PcItem("HEXISTS"),
	readline.PcItem("HGET"),
	readline.PcItem("HGETALL"),
	readline.PcItem("HINCRBY"),
	readline.PcItem("HINCRBYFLOAT"),
	readline.PcItem("HKEYS"),
	readline.PcItem("HLEN"),
	readline.PcItem("HMGET"),
	readline.PcItem("HMSET"),
	readline.PcItem("HRANDFIELD"),
	readline.PcItem("HSCAN"),
	readline.PcItem("HSET"),
	readline.PcItem("HSETNX"),
	readline.PcItem("HSTRLEN"),
	readline.PcItem("HVALS"),
	readline.PcItem("PFADD"),
	readline.PcItem("PFCOUNT"),
	readline.PcItem("PFMERGE"),
	readline.PcItem("BLMOVE"),
	readline.PcItem("BLPOP"),
	readline.PcItem("BRPOP"),
	readline.PcItem("BRPOPLPUSH"),
	readline.PcItem("LINDEX"),
	readline.PcItem("LINSERT"),
	readline.PcItem("LLEN"),
	readline.PcItem("LPOS"),
	readline.PcItem("LPOP"),
	readline.PcItem("LPUSH"),
	readline.PcItem("LPUSHX"),
	readline.PcItem("LRANGE"),
	readline.PcItem("LREM"),
	readline.PcItem("LSET"),
	readline.PcItem("LTRIM"),
	readline.PcItem("RPOP"),
	readline.PcItem("RPOPLPUSH"),
	readline.PcItem("RPUSH"),
	readline.PcItem("RPUSHX"),
	readline.PcItem("PSUBSCRIBE"),
	readline.PcItem("PUBLISH"),
	readline.PcItem("PUBSUB"),
	readline.PcItem("PUNSUBSCRIBE"),
	readline.PcItem("SUBSCRIBE"),
	readline.PcItem("UNSUBSCRIBE"),
	readline.PcItem("EVAL"),
	readline.PcItem("EVAL_RO"),
	readline.PcItem("EVALSHA"),
	readline.PcItem("EVALSHA_RO"),
	readline.PcItem("SWAPDB"),
	readline.PcItem("BGREWRITEAOF"),
	readline.PcItem("BGSAVE"),
	readline.PcItem("COMMAND"),
	readline.PcItem("DBSIZE"),
	readline.PcItem("FAILOVER"),
	readline.PcItem("FLUSHALL"),
	readline.PcItem("FLUSHDB"),
	readline.PcItem("INFO"),
	readline.PcItem("LOLWUT"),
	readline.PcItem("LASTSAVE"),
	readline.PcItem("MONITOR"),
	readline.PcItem("PSYNC"),
	readline.PcItem("REPLICAOF"),
	readline.PcItem("ROLE"),
	readline.PcItem("SAVE"),
	readline.PcItem("SHUTDOWN"),
	readline.PcItem("SLAVEOF"),
	readline.PcItem("SLOWLOG"),
	readline.PcItem("SYNC"),
	readline.PcItem("TIME"),
	readline.PcItem("SADD"),
	readline.PcItem("SCARD"),
	readline.PcItem("SDIFF"),
	readline.PcItem("SDIFFSTORE"),
	readline.PcItem("SINTER"),
	readline.PcItem("SINTERSTORE"),
	readline.PcItem("SISMEMBER"),
	readline.PcItem("SMEMBERS"),
	readline.PcItem("SMOVE"),
	readline.PcItem("SPOP"),
	readline.PcItem("SRANDMEMBER"),
	readline.PcItem("SREM"),
	readline.PcItem("SSCAN"),
	readline.PcItem("SUNION"),
	readline.PcItem("SUNIONSTORE"),
	readline.PcItem("BZPOPMAX"),
	readline.PcItem("BZPOPMIN"),
	readline.PcItem("ZADD"),
	readline.PcItem("ZCARD"),
	readline.PcItem("ZCOUNT"),
	readline.PcItem("ZINCRBY"),
	readline.PcItem("ZINTERSTORE"),
	readline.PcItem("ZLEXCOUNT"),
	readline.PcItem("ZPOPMAX"),
	readline.PcItem("ZPOPMIN"),
	readline.PcItem("ZRANGE"),
	readline.PcItem("ZRANGEBYLEX"),
	readline.PcItem("ZRANGEBYSCORE"),
	readline.PcItem("ZRANK"),
	readline.PcItem("ZREM"),
	readline.PcItem("ZREMRANGEBYLEX"),
	readline.PcItem("ZREMRANGEBYRANK"),
	readline.PcItem("ZREMRANGEBYSCORE"),
	readline.PcItem("ZREVRANGE"),
	readline.PcItem("ZREVRANGEBYLEX"),
	readline.PcItem("ZREVRANGEBYSCORE"),
	readline.PcItem("ZREVRANK"),
	readline.PcItem("ZSCAN"),
	readline.PcItem("ZSCORE"),
	readline.PcItem("ZUNIONSTORE"),
	readline.PcItem("XACK"),
	readline.PcItem("XADD"),
	readline.PcItem("XCLAIM"),
	readline.PcItem("XDEL"),
	readline.PcItem("XGROUP"),
	readline.PcItem("XINFO"),
	readline.PcItem("XLEN"),
	readline.PcItem("XPENDING"),
	readline.PcItem("XRANGE"),
	readline.PcItem("XREAD"),
	readline.PcItem("XREADGROUP"),
	readline.PcItem("XREVRANGE"),
	readline.PcItem("XTRIM"),
	readline.PcItem("APPEND"),
	readline.PcItem("BITCOUNT"),
	readline.PcItem("BITFIELD"),
	readline.PcItem("BITOP"),
	readline.PcItem("BITPOS"),
	readline.PcItem("DECR"),
	readline.PcItem("DECRBY"),
	readline.PcItem("GET"),
	readline.PcItem("GETEX"),
	readline.PcItem("GETBIT"),
	readline.PcItem("GETDEL"),
	readline.PcItem("GETRANGE"),
	readline.PcItem("GETSET"),
	readline.PcItem("INCR"),
	readline.PcItem("INCRBY"),
	readline.PcItem("INCRBYFLOAT"),
	readline.PcItem("MGET"),
	readline.PcItem("MSET"),
	readline.PcItem("MSETNX"),
	readline.PcItem("PSETEX"),
	readline.PcItem("SET"),
	readline.PcItem("SETBIT"),
	readline.PcItem("SETEX"),
	readline.PcItem("SETNX"),
	readline.PcItem("SETRANGE"),
	readline.PcItem("STRALGO"),
	readline.PcItem("STRLEN"),
	readline.PcItem("DISCARD"),
	readline.PcItem("EXEC"),
	readline.PcItem("MULTI"),
	readline.PcItem("UNWATCH"),
	readline.PcItem("WATCH"),
	readline.PcItem("HELP"),
	readline.PcItem("PEEK"),
	readline.PcItem("CLEAR"),
	readline.PcItem("EXIT"),
	readline.PcItem("readonly"),
	readline.PcItem("readwrite"),
	readline.PcItem("auth"),
	readline.PcItem("echo"),
	readline.PcItem("hello"),
	readline.PcItem("ping"),
	readline.PcItem("quit"),
	readline.PcItem("select"),
	readline.PcItem("copy"),
	readline.PcItem("del"),
	readline.PcItem("dump"),
	readline.PcItem("exists"),
	readline.PcItem("expire"),
	readline.PcItem("expireat"),
	readline.PcItem("expiretime"),
	readline.PcItem("keys"),
	readline.PcItem("migrate"),
	readline.PcItem("move"),
	readline.PcItem("object"),
	readline.PcItem("persist"),
	readline.PcItem("pexpire"),
	readline.PcItem("pexpireat"),
	readline.PcItem("pttl"),
	readline.PcItem("randomkey"),
	readline.PcItem("rename"),
	readline.PcItem("renamenx"),
	readline.PcItem("restore"),
	readline.PcItem("scan"),
	readline.PcItem("sort"),
	readline.PcItem("touch"),
	readline.PcItem("ttl"),
	readline.PcItem("type"),
	readline.PcItem("unlink"),
	readline.PcItem("wait"),
	readline.PcItem("geoadd"),
	readline.PcItem("geodist"),
	readline.PcItem("geohash"),
	readline.PcItem("geopos"),
	readline.PcItem("georadius"),
	readline.PcItem("georadiusbymember"),
	readline.PcItem("geosearch"),
	readline.PcItem("geosearchstore"),
	readline.PcItem("hdel"),
	readline.PcItem("hexists"),
	readline.PcItem("hget"),
	readline.PcItem("hgetall"),
	readline.PcItem("hincrby"),
	readline.PcItem("hincrbyfloat"),
	readline.PcItem("hkeys"),
	readline.PcItem("hlen"),
	readline.PcItem("hmget"),
	readline.PcItem("hmset"),
	readline.PcItem("hrandfield"),
	readline.PcItem("hscan"),
	readline.PcItem("hset"),
	readline.PcItem("hsetnx"),
	readline.PcItem("hstrlen"),
	readline.PcItem("hvals"),
	readline.PcItem("pfadd"),
	readline.PcItem("pfcount"),
	readline.PcItem("pfmerge"),
	readline.PcItem("blmove"),
	readline.PcItem("blpop"),
	readline.PcItem("brpop"),
	readline.PcItem("brpoplpush"),
	readline.PcItem("lindex"),
	readline.PcItem("linsert"),
	readline.PcItem("llen"),
	readline.PcItem("lpos"),
	readline.PcItem("lpop"),
	readline.PcItem("lpush"),
	readline.PcItem("lpushx"),
	readline.PcItem("lrange"),
	readline.PcItem("lrem"),
	readline.PcItem("lset"),
	readline.PcItem("ltrim"),
	readline.PcItem("rpop"),
	readline.PcItem("rpoplpush"),
	readline.PcItem("rpush"),
	readline.PcItem("rpushx"),
	readline.PcItem("psubscribe"),
	readline.PcItem("publish"),
	readline.PcItem("pubsub"),
	readline.PcItem("punsubscribe"),
	readline.PcItem("subscribe"),
	readline.PcItem("unsubscribe"),
	readline.PcItem("eval"),
	readline.PcItem("eval_ro"),
	readline.PcItem("evalsha"),
	readline.PcItem("evalsha_ro"),
	readline.PcItem("swapdb"),
	readline.PcItem("bgrewriteaof"),
	readline.PcItem("bgsave"),
	readline.PcItem("command"),
	readline.PcItem("dbsize"),
	readline.PcItem("failover"),
	readline.PcItem("flushall"),
	readline.PcItem("flushdb"),
	readline.PcItem("info"),
	readline.PcItem("lolwut"),
	readline.PcItem("lastsave"),
	readline.PcItem("monitor"),
	readline.PcItem("psync"),
	readline.PcItem("replicaof"),
	readline.PcItem("role"),
	readline.PcItem("save"),
	readline.PcItem("shutdown"),
	readline.PcItem("slaveof"),
	readline.PcItem("slowlog"),
	readline.PcItem("sync"),
	readline.PcItem("time"),
	readline.PcItem("sadd"),
	readline.PcItem("scard"),
	readline.PcItem("sdiff"),
	readline.PcItem("sdiffstore"),
	readline.PcItem("sinter"),
	readline.PcItem("sinterstore"),
	readline.PcItem("sismember"),
	readline.PcItem("smembers"),
	readline.PcItem("smove"),
	readline.PcItem("spop"),
	readline.PcItem("srandmember"),
	readline.PcItem("srem"),
	readline.PcItem("sscan"),
	readline.PcItem("sunion"),
	readline.PcItem("sunionstore"),
	readline.PcItem("bzpopmax"),
	readline.PcItem("bzpopmin"),
	readline.PcItem("zadd"),
	readline.PcItem("zcard"),
	readline.PcItem("zcount"),
	readline.PcItem("zincrby"),
	readline.PcItem("zinterstore"),
	readline.PcItem("zlexcount"),
	readline.PcItem("zpopmax"),
	readline.PcItem("zpopmin"),
	readline.PcItem("zrange"),
	readline.PcItem("zrangebylex"),
	readline.PcItem("zrangebyscore"),
	readline.PcItem("zrank"),
	readline.PcItem("zrem"),
	readline.PcItem("zremrangebylex"),
	readline.PcItem("zremrangebyrank"),
	readline.PcItem("zremrangebyscore"),
	readline.PcItem("zrevrange"),
	readline.PcItem("zrevrangebylex"),
	readline.PcItem("zrevrangebyscore"),
	readline.PcItem("zrevrank"),
	readline.PcItem("zscan"),
	readline.PcItem("zscore"),
	readline.PcItem("zunionstore"),
	readline.PcItem("xack"),
	readline.PcItem("xadd"),
	readline.PcItem("xclaim"),
	readline.PcItem("xdel"),
	readline.PcItem("xgroup"),
	readline.PcItem("xinfo"),
	readline.PcItem("xlen"),
	readline.PcItem("xpending"),
	readline.PcItem("xrange"),
	readline.PcItem("xread"),
	readline.PcItem("xreadgroup"),
	readline.PcItem("xrevrange"),
	readline.PcItem("xtrim"),
	readline.PcItem("append"),
	readline.PcItem("bitcount"),
	readline.PcItem("bitfield"),
	readline.PcItem("bitop"),
	readline.PcItem("bitpos"),
	readline.PcItem("decr"),
	readline.PcItem("decrby"),
	readline.PcItem("get"),
	readline.PcItem("getex"),
	readline.PcItem("getbit"),
	readline.PcItem("getdel"),
	readline.PcItem("getrange"),
	readline.PcItem("getset"),
	readline.PcItem("incr"),
	readline.PcItem("incrby"),
	readline.PcItem("incrbyfloat"),
	readline.PcItem("mget"),
	readline.PcItem("mset"),
	readline.PcItem("msetnx"),
	readline.PcItem("psetex"),
	readline.PcItem("set"),
	readline.PcItem("setbit"),
	readline.PcItem("setex"),
	readline.PcItem("setnx"),
	readline.PcItem("setrange"),
	readline.PcItem("stralgo"),
	readline.PcItem("strlen"),
	readline.PcItem("discard"),
	readline.PcItem("exec"),
	readline.PcItem("multi"),
	readline.PcItem("unwatch"),
	readline.PcItem("watch"),
	readline.PcItem("help"),
	readline.PcItem("peek"),
	readline.PcItem("clear"),
	readline.PcItem("exit"),
	readline.PcItem(
		"SCRIPT",
		readline.PcItem("DEBUG"),
		readline.PcItem("EXISTS"),
		readline.PcItem("FLUSH"),
		readline.PcItem("KILL"),
		readline.PcItem("LOAD"),
	),
	readline.PcItem(
		"CONFIG",
		readline.PcItem("GET"),
		readline.PcItem("RESETSTAT"),
		readline.PcItem("REWRITE"),
		readline.PcItem("SET"),
	),
	readline.PcItem(
		"DEBUG",
		readline.PcItem("OBJECT"),
		readline.PcItem("SEGFAULT"),
	),
	readline.PcItem(
		"LATENCY",
		readline.PcItem("DOCTOR"),
		readline.PcItem("GRAPH"),
		readline.PcItem("HELP"),
		readline.PcItem("HISTORY"),
		readline.PcItem("LATEST"),
		readline.PcItem("RESET"),
	),
	readline.PcItem(
		"MEMORY",
		readline.PcItem("DOCTOR"),
		readline.PcItem("HELP"),
		readline.PcItem("MALLOC-STATS"),
		readline.PcItem("PURGE"),
		readline.PcItem("STATS"),
		readline.PcItem("USAGE"),
	),
	readline.PcItem(
		"MODULE",
		readline.PcItem("LIST"),
		readline.PcItem("LOAD"),
		readline.PcItem("UNLOAD"),
	),
	readline.PcItem(
		"CLIENT",
		readline.PcItem("CACHING"),
		readline.PcItem("GETREDIR"),
		readline.PcItem("TRACKING"),
		readline.PcItem("TRACKINGINFO"),
		readline.PcItem("LIST"),
		readline.PcItem("GETNAME"),
		readline.PcItem("ID"),
		readline.PcItem("INFO"),
		readline.PcItem("KILL"),
		readline.PcItem("PAUSE"),
		readline.PcItem("UNPAUSE"),
		readline.PcItem("REPLY"),
		readline.PcItem("SETNAME"),
		readline.PcItem("UNBLOCK"),
	),
	readline.PcItem(
		"ACL",
		readline.PcItem("CAT"),
		readline.PcItem("DELUSER"),
		readline.PcItem("GENPASS"),
		readline.PcItem("GETUSER"),
		readline.PcItem("HELP"),
		readline.PcItem("LIST"),
		readline.PcItem("LOAD"),
		readline.PcItem("LOG"),
		readline.PcItem("SAVE"),
		readline.PcItem("SETUSER"),
		readline.PcItem("USERS"),
		readline.PcItem("WHOAMI"),
	),
	readline.PcItem(
		"COMMAND",
		readline.PcItem("COUNT"),
		readline.PcItem("GETKEYS"),
		readline.PcItem("INFO"),
	),
	readline.PcItem(
		"CLUSTER",
		readline.PcItem("ADDSLOTS"),
		readline.PcItem("BUMPEPOCH"),
		readline.PcItem("COUNT-FAILURE-REPORTS"),
		readline.PcItem("COUNTKEYSINSLOT"),
		readline.PcItem("DELSLOTS"),
		readline.PcItem("FAILOVER"),
		readline.PcItem("FLUSHSLOTS"),
		readline.PcItem("FORGET"),
		readline.PcItem("GETKEYSINSLOT"),
		readline.PcItem("INFO"),
		readline.PcItem("KEYSLOT"),
		readline.PcItem("MEET"),
		readline.PcItem("MYID"),
		readline.PcItem("NODES"),
		readline.PcItem("REPLICAS"),
		readline.PcItem("REPLICATE"),
		readline.PcItem("RESET"),
		readline.PcItem("SAVECONFIG"),
		readline.PcItem("SET-CONFIG-EPOCH"),
		readline.PcItem("SETSLOT"),
		readline.PcItem("SLAVES"),
		readline.PcItem("SLOTS"),
	),
	readline.PcItem(
		"cluster",
		readline.PcItem("addslots"),
		readline.PcItem("bumpepoch"),
		readline.PcItem("count-failure-reports"),
		readline.PcItem("countkeysinslot"),
		readline.PcItem("delslots"),
		readline.PcItem("failover"),
		readline.PcItem("flushslots"),
		readline.PcItem("forget"),
		readline.PcItem("getkeysinslot"),
		readline.PcItem("info"),
		readline.PcItem("keyslot"),
		readline.PcItem("meet"),
		readline.PcItem("myid"),
		readline.PcItem("nodes"),
		readline.PcItem("replicas"),
		readline.PcItem("replicate"),
		readline.PcItem("reset"),
		readline.PcItem("saveconfig"),
		readline.PcItem("set-config-epoch"),
		readline.PcItem("setslot"),
		readline.PcItem("slaves"),
		readline.PcItem("slots"),
	),
	readline.PcItem(
		"acl",
		readline.PcItem("cat"),
		readline.PcItem("deluser"),
		readline.PcItem("genpass"),
		readline.PcItem("getuser"),
		readline.PcItem("help"),
		readline.PcItem("list"),
		readline.PcItem("load"),
		readline.PcItem("log"),
		readline.PcItem("save"),
		readline.PcItem("setuser"),
		readline.PcItem("users"),
		readline.PcItem("whoami"),
	),
	readline.PcItem(
		"command",
		readline.PcItem("count"),
		readline.PcItem("getkeys"),
		readline.PcItem("info"),
	),
	readline.PcItem(
		"module",
		readline.PcItem("list"),
		readline.PcItem("load"),
		readline.PcItem("unload"),
	),
	readline.PcItem(
		"client",
		readline.PcItem("caching"),
		readline.PcItem("getredir"),
		readline.PcItem("tracking"),
		readline.PcItem("trackinginfo"),
		readline.PcItem("list"),
		readline.PcItem("getname"),
		readline.PcItem("id"),
		readline.PcItem("info"),
		readline.PcItem("kill"),
		readline.PcItem("pause"),
		readline.PcItem("unpause"),
		readline.PcItem("reply"),
		readline.PcItem("setname"),
		readline.PcItem("unblock"),
	),
	readline.PcItem(
		"script",
		readline.PcItem("debug"),
		readline.PcItem("exists"),
		readline.PcItem("flush"),
		readline.PcItem("kill"),
		readline.PcItem("load"),
	),
	readline.PcItem(
		"config",
		readline.PcItem("get"),
		readline.PcItem("resetstat"),
		readline.PcItem("rewrite"),
		readline.PcItem("set"),
	),
	readline.PcItem(
		"debug",
		readline.PcItem("object"),
		readline.PcItem("segfault"),
	),
	readline.PcItem(
		"latency",
		readline.PcItem("doctor"),
		readline.PcItem("graph"),
		readline.PcItem("help"),
		readline.PcItem("history"),
		readline.PcItem("latest"),
		readline.PcItem("reset"),
	),
	readline.PcItem(
		"memory",
		readline.PcItem("doctor"),
		readline.PcItem("help"),
		readline.PcItem("malloc-stats"),
		readline.PcItem("purge"),
		readline.PcItem("stats"),
		readline.PcItem("usage"),
	),
)

var dangerousCommands = map[string]string{
	"FLUSHDB":    "FLUSHDB will delete all the keys of the currently selected DB",
	"FLUSHALL":   "FLUSHALL will delete all the keys of all the existing databases",
	"KEYS":       "KEYS will hang redis server, use SCAN instead",
	"PEXPIRE":    "PEXPIRE may delete keys",
	"DEL":        "DEL will delete keys, it may cause high latency when the value is big",
	"CONFIG SET": "CONFIG SET will change the server's configs",
	"SHUTDOWN":   "SHUTDOWN will shutdown the server",
	"SAVE":       "SAVE performs a synchronous save, it will hang redis server",
	"SPOP":       "SPOP will delete items",
	"SREM":       "SREM will delete items",
	"RENAME":     "RENAME use DELETE command to overwrite exist key, it may cause high latency when the value is big",
	"DEBUG":      "It's a dangerous command",
}
